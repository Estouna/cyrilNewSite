#test {
    background-color: navajowhite;
}

#grid {
    width: 40vw;
    height: 40vh;
    transition: 700ms;
    display: grid;
    grid-template-columns: 1fr 0fr;
    background: blanchedalmond;
    letter-spacing: 5px;
}

#grid:hover {
    grid-template-columns: 1fr 3fr;
    letter-spacing: 2px;
}

.col-2 {
    background-image: url('../asset/gecko_1920x1080.jpg');
    background-position: center;
    background-size: cover;
    box-shadow: -5px 0px 5px black;
}

/*test 2*/
#test2 {
    background-color: blanchedalmond;
}

.titre {
    flex-direction: column;
}

:root {
    /*Diamètre du cercle*/
    --width: calc(260px + 10vw);
    /*Rayon du cercle (qui s'adaptera si --width change)*/
    --radius: calc((var(--width) - var(--imgSize)) / 2);
    /*Hauteur/largeur images*/
    --imgSize: calc(var(--width) / 5.5);
}

.container-flower {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.flower {
    position: relative;
    aspect-ratio: 1;
    border-radius: 50%;
    list-style-type: none;
    width: var(--width);
    transition: 1s;
    opacity: 0;
    transform: scale(0);
    z-index: 1;
}

.flower.active {
    animation: openFlower 1s alternate;
    opacity: 1;
    transform: scale(1);
}

.flower img {
    /*Coordonnée de X = rayon + (rayon * cos(degré))*/
    --pos-x: calc(var(--radius) + (var(--radius) * cos(var(--_degree))));
    /*Coordonnée de Y = rayon + (rayon * sin(degré))*/
    --pos-y: calc(var(--radius) + (var(--radius) * sin(var(--_degree))));
    position: absolute;
    top: var(--pos-y);
    left: var(--pos-x);
    width: var(--imgSize);
    height: var(--imgSize);
    border-radius: 50%;
    display: grid;
    place-content: center;
    transition: transform .2s ease-in;
    z-index: 1;
    filter: drop-shadow(15px 10px 10px rgb(115, 115, 115));
}

/*
  Un cercle fait 360 degrés. Il y a 12 images sur le cercle, il faut donc placer une image tous les 30 degrés (360/12). 
  En mathématiques, midi est en fait à moins 90 degrés, soit 270 degrés (360 - 90).
  La variable --degree sert à définir une valeur en degré pour chaque image sur le cercle. 
  Il faut incrémenter les valeurs de 30 degrés pour boucler le cercle :
*/
.flower img:nth-child(1) {--_degree: 270deg;}
.flower img:nth-child(2) {--_degree: 300deg;}
.flower img:nth-child(3) {--_degree: 330deg;}
.flower img:nth-child(4) {  --_degree: 0deg;}
.flower img:nth-child(5) { --_degree: 30deg;}
.flower img:nth-child(6) { --_degree: 60deg;}
.flower img:nth-child(7) { --_degree: 90deg;}
.flower img:nth-child(8) {--_degree: 120deg;}
.flower img:nth-child(9) {--_degree: 150deg;}
.flower img:nth-child(10) {--_degree: 180deg;}
.flower img:nth-child(11) {--_degree: 210deg;}
.flower img:nth-child(12) {--_degree: 240deg;}

.alert {
    display: none;
    font-family: ui-sans-serif, system-ui, sans-serif;
    text-align: center;
    color: #fff;
    margin-bottom: 20px;
}

.bg-btn {
    position: absolute;
    top: 50%;
    left: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    width: calc(70px + 0.5vw);
    height: calc(70px + 0.5vw);
    border-radius: 100%;
    transform: translateX(-50%) translateY(-50%) scale(1);
    transition: 0.5s;
    z-index: 1;
}

.bg-btn:hover, .bg-btn:active {
    transform: translateX(-50%) translateY(-50%) scale(1.05);
}

.btn-flower {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: calc(10px + 0.30vw);
    width: 100%;
    height: 100%;
    background-color: transparent;
    border: none;
}

.btn-flower span {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgb(29, 29, 29);
    outline: 4px double rgb(29, 29, 29);
    width: 100%;
    height: 100%;
    border-radius: 100%;
    border: none;
    color: white;
    cursor: pointer;
    letter-spacing: 1px;
    box-shadow: 1px 1px 5px rgb(29, 29, 29), inset 2px 1px 5px rgb(235, 235, 235);
    filter: drop-shadow(15px 10px 10px rgb(115, 115, 115));
}

.stem {
    position: absolute;
    width: var(--width);
    top: 50%;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

.stem-left, .stem-right {
    position: relative;
    background-color: transparent;
    top: 0;
    left: 0;
    width: 190px;
    height: calc(270px + 5vw);
    border-radius: 0 50% 100% 0;
}

.stem-left {
    border-right: 1px solid rgb(29, 29, 29);
    transform: translateX(22%) translateY(2%);
}

.stem-right {
    border-right: 3px solid rgb(29, 29, 29);
    transform: translateX(-80%) translateY(2%);
    filter: drop-shadow(15px 15px 6px rgb(43, 43, 43));
}

@keyframes openFlower {
    0% {
        opacity: 0;
        transform: scale(0);
    }

    10% {
        opacity: 1;
        transform: scale(1.2);
    }

    30% {
        opacity: 1;
        transform: scale(0.4);
    }

    75% {
        opacity: 1;
        transform: scale(1.1);
    }

    100% {
        opacity: 1;
        transform: scale(1.0);
    }
}

@supports (left: calc(1px * cos(45deg))) {
    .flower img:hover {
        z-index: 10;
        transform: scale(1.2);
    }
}

@supports not (left: calc(1px * cos(45deg))) {
    p {
        display: block;
    }

    /* img {
        left: 50% !important;
        top: 50% !important;
        transform: translate(-50%, -50%) rotate(var(--_degree)) translate(var(--radius)) rotate(calc(-1*var(--_degree)))
    } */
}